(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{371:function(s,t,a){"use strict";a.r(t);var n=a(44),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"消息"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#消息"}},[s._v("#")]),s._v(" 消息")]),s._v(" "),a("p",[s._v("Mirai.Net发送和接收消息遵循了mirai-api-http的消息格式，你可以在"),a("a",{attrs:{href:"https://docs.mirai.mamoe.net/mirai-api-http/api/MessageType.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("官方文档"),a("OutboundLink")],1),s._v("中知道具体有什么消息以及这些消息是做什么的，因为Mirai.Net对消息的定义与官方文档中提供的基本一样，所以这篇文章将不会再列出所有的消息类型。")]),s._v(" "),a("h2",{attrs:{id:"概述"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#概述"}},[s._v("#")]),s._v(" 概述")]),s._v(" "),a("p",[s._v("接上面所言，Mirai.Net还使用了CLR封装的"),a("code",[s._v("xxReceiver")]),s._v("来作为一条消息的容器。")]),s._v(" "),a("p",[s._v("比如:")]),s._v(" "),a("div",{staticClass:"language-cs extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cs"}},[a("code",[s._v("bot"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("MessageReceived\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token generic-method"}},[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("OfType")]),a("span",{pre:!0,attrs:{class:"token generic class-name"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),s._v("GroupMessageReceiver"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("Subscribe")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("receiver "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//omit")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),a("p",[s._v("上面的代码中，"),a("code",[s._v("receiver")]),s._v("是一个"),a("code",[s._v("GroupMessageReceiver")]),s._v("，它是一个群消息的容器。")]),s._v(" "),a("p",[s._v("又比如：")]),s._v(" "),a("div",{staticClass:"language-cs extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cs"}},[a("code",[s._v("bot"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("MessageReceived\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token generic-method"}},[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("OfType")]),a("span",{pre:!0,attrs:{class:"token generic class-name"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),s._v("FriendMessageReceiver"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("Subscribe")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("receiver "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//omit")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),a("p",[s._v("这里的"),a("code",[s._v("receiver")]),s._v("是一个"),a("code",[s._v("FriendMessageReceiver")]),s._v("，它是一个好友消息的容器。")]),s._v(" "),a("p",[s._v("这些"),a("code",[s._v("receiver")]),s._v("都是"),a("code",[s._v("MessageReceiverBase")]),s._v("的子类，它们都有：")]),s._v(" "),a("ul",[a("li",[a("code",[s._v("MessageChain")]),s._v("属性，用来表示收到的消息链。")]),s._v(" "),a("li",[a("code",[s._v("Sender")]),s._v("属性，用来表示消息的发送者，每个子类中的"),a("code",[s._v("Sender")]),s._v("都有其对应的类型。")])]),s._v(" "),a("h2",{attrs:{id:"接收消息"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#接收消息"}},[s._v("#")]),s._v(" 接收消息")]),s._v(" "),a("p",[s._v("所谓接收消息，也就是消费上面提到的一系列Receiver。")]),s._v(" "),a("p",[s._v("正如响应事件那样，Mirai.Net也使用了Rx.Net的订阅模式来接收消息，"),a("code",[s._v("MiraiBot")]),s._v("类中的"),a("code",[s._v("MessageReceived")]),s._v("属性就是用来接受消息订阅器的，你同样可以定义无数个不同的消息订阅器，用来接收和处理不同类型的消息。")]),s._v(" "),a("h3",{attrs:{id:"群消息"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#群消息"}},[s._v("#")]),s._v(" 群消息")]),s._v(" "),a("p",[s._v("正如前文所言，群消息的容器"),a("code",[s._v("GroupMessageReceiver")]),s._v("所对应的"),a("code",[s._v("Sender")]),s._v("就是"),a("code",[s._v("Member")]),s._v("，也就是表示一个群成员的对象。")]),s._v(" "),a("div",{staticClass:"language-cs extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cs"}},[a("code",[s._v("bot"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("MessageReceived\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token generic-method"}},[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("OfType")]),a("span",{pre:!0,attrs:{class:"token generic class-name"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),s._v("GroupMessageReceiver"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("Subscribe")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("receiver "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")])]),s._v(" message "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" receiver"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("MessageChain"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token generic-method"}},[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("OfType")]),a("span",{pre:!0,attrs:{class:"token generic class-name"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),s._v("PlainMessage"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("First")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("Text"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")])]),s._v(" senderName "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" receiver"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("Sender"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("Name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        Console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("WriteLine")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token interpolation-string"}},[a("span",{pre:!0,attrs:{class:"token string"}},[s._v('$"收到了来自')]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token expression language-csharp"}},[s._v("senderName")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")])]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("这样的消息：")]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token expression language-csharp"}},[s._v("message")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")])]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),a("h3",{attrs:{id:"好友消息"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#好友消息"}},[s._v("#")]),s._v(" 好友消息")]),s._v(" "),a("p",[s._v("同上可得：")]),s._v(" "),a("div",{staticClass:"language-cs extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cs"}},[a("code",[s._v(" bot"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("MessageReceived\n     "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token generic-method"}},[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("OfType")]),a("span",{pre:!0,attrs:{class:"token generic class-name"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),s._v("FriendMessageReceiver"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n     "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("Subscribe")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("receiver "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),s._v("\n     "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n         "),a("span",{pre:!0,attrs:{class:"token class-name"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")])]),s._v(" message "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" receiver"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("MessageChain"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token generic-method"}},[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("OfType")]),a("span",{pre:!0,attrs:{class:"token generic class-name"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),s._v("PlainMessage"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("First")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("Text"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n         "),a("span",{pre:!0,attrs:{class:"token class-name"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")])]),s._v(" senderName "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" receiver"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("Sender"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("NickName"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n         Console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("WriteLine")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token interpolation-string"}},[a("span",{pre:!0,attrs:{class:"token string"}},[s._v('$"收到了来自')]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token expression language-csharp"}},[s._v("senderName")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")])]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("这样的消息：")]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token expression language-csharp"}},[s._v("message")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")])]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n     "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),a("h3",{attrs:{id:"其它消息容器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#其它消息容器"}},[s._v("#")]),s._v(" 其它消息容器")]),s._v(" "),a("p",[s._v("Mirai.Net一共有以下几种消息容器，它们的成员名称都很明了，不需要进行详细说明，如果需要，请参阅源码。")]),s._v(" "),a("p",[s._v("它们地使用完全和上面的例子一样：")]),s._v(" "),a("div",{staticClass:"language-cs extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cs"}},[a("code",[s._v("bot"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("MessageReceived\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token generic-method"}},[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("OfType")]),a("span",{pre:!0,attrs:{class:"token generic class-name"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),s._v("xxReceiver"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("Subscribe")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("receiver "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//omit")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),a("ul",[a("li",[s._v("FriendMessageReceiver，用来接收好友消息，"),a("code",[s._v("Sender")]),s._v("是"),a("a",{attrs:{href:"https://github.com/SinoAHpx/Mirai.Net/blob/2.2/Mirai.Net/Data/Shared/Friend.cs",target:"_blank",rel:"noopener noreferrer"}},[s._v("Friend"),a("OutboundLink")],1),s._v("。")]),s._v(" "),a("li",[s._v("GroupMessageReceiver，用来接收群消息，"),a("code",[s._v("Sender")]),s._v("是"),a("a",{attrs:{href:"https://github.com/SinoAHpx/Mirai.Net/blob/2.2/Mirai.Net/Data/Shared/Member.cs",target:"_blank",rel:"noopener noreferrer"}},[s._v("Member"),a("OutboundLink")],1),s._v("。")]),s._v(" "),a("li",[s._v("TempMessageReceiver，用来接收临时消息，"),a("code",[s._v("Sender")]),s._v("是"),a("a",{attrs:{href:"https://github.com/SinoAHpx/Mirai.Net/blob/2.2/Mirai.Net/Data/Shared/Friend.cs",target:"_blank",rel:"noopener noreferrer"}},[s._v("Member"),a("OutboundLink")],1),s._v("。")]),s._v(" "),a("li",[s._v("StrangerMessageReceiver，用来接收陌生人消息，"),a("code",[s._v("Sender")]),s._v("是"),a("a",{attrs:{href:"https://github.com/SinoAHpx/Mirai.Net/blob/2.2/Mirai.Net/Data/Shared/Friend.cs",target:"_blank",rel:"noopener noreferrer"}},[s._v("Friend"),a("OutboundLink")],1),s._v("。")]),s._v(" "),a("li",[s._v("OtherClientMessageReceiver，用来接收其它客户端消息，"),a("code",[s._v("Sender")]),s._v("是"),a("a",{attrs:{href:"https://github.com/SinoAHpx/Mirai.Net/blob/2.2/Mirai.Net/Data/Shared/OtherClient.cs",target:"_blank",rel:"noopener noreferrer"}},[s._v("OtherClient"),a("OutboundLink")],1),s._v("。")])]),s._v(" "),a("h2",{attrs:{id:"发送消息"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#发送消息"}},[s._v("#")]),s._v(" 发送消息")]),s._v(" "),a("p",[s._v("如果是消息的接收和发送是开发QQ机器人的重中之重，那么发送消息就是重中之重之重了。前面指北里提到过，Mirai.Net的消息发送分为主动和被动发送两种方式，这里就来详细介绍以下它们。但是在这之前，我们先来看一下在Mirai.Net是如何构造消息链的。")]),s._v(" "),a("h3",{attrs:{id:"构造消息链"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#构造消息链"}},[s._v("#")]),s._v(" 构造消息链")]),s._v(" "),a("p",[s._v("所谓消息链，在Mirai.Net中的表示很简单，就是一个"),a("code",[s._v("MessageChain")]),s._v("的集合，它的元素是"),a("code",[s._v("MessageBase")]),s._v("的子类。")]),s._v(" "),a("p",[s._v("构造一个最基础的消息链：")]),s._v(" "),a("div",{staticClass:"language-cs extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cs"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")])]),s._v(" messageChain "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token constructor-invocation class-name"}},[s._v("MessageBase"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")])]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token constructor-invocation class-name"}},[s._v("AtMessage")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"114514"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token constructor-invocation class-name"}},[s._v("PlainMessage")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Hello World!"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),a("p",[s._v("这就是一个基础的消息链，它表示包含一个At消息和一个文本消息，但是你会发现，这么构造消息链显然太麻烦了，所以Mirai.Net提供了一个更简单的构造方式：")]),s._v(" "),a("div",{staticClass:"language-cs extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cs"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")])]),s._v(" messageChain "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Hello World!"')]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("Append")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token constructor-invocation class-name"}},[s._v("AtMessage")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"114514"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("Append")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token constructor-invocation class-name"}},[s._v("ImageMessage")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token constructor-invocation class-name"}},[s._v("JsonMessage")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("Append")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Hello World!"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("Append")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Hello World!"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),a("p",[s._v("上示的"),a("code",[s._v("Append")]),s._v("方法是一个拓展方法，它可以基于"),a("code",[s._v("string")]),s._v("/"),a("code",[s._v("MessageBase")]),s._v("/"),a("code",[s._v("IEnumberable<MessageBase>")]),s._v("来构造消息链。同样地，它的参数你可以传入"),a("code",[s._v("string")]),s._v("/"),a("code",[s._v("MessageBase")]),s._v("/"),a("code",[s._v("IEnumberable<MessageBase>")]),s._v("。")]),s._v(" "),a("h3",{attrs:{id:"主动发送消息"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#主动发送消息"}},[s._v("#")]),s._v(" 主动发送消息")]),s._v(" "),a("p",[s._v("主动发送消息是通过"),a("code",[s._v("MessageManager")]),s._v("来完成的，这是一个静态类。")]),s._v(" "),a("p",[s._v("主动发送消息需要你指定发送目标和消息链，这里我们来看看如何构造一个主动发送消息的例子：")]),s._v(" "),a("div",{staticClass:"language-cs extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cs"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("await")]),s._v(" MessageManager"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("SendTempMessageAsync")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"114514"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"1919810"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"HelloWorld!"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("await")]),s._v(" MessageManager"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("SendFriendMessageAsync")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"114514"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"HelloWorld!"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("await")]),s._v(" MessageManager"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("SendGroupMessageAsync")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"114514"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"HelloWorld!"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),a("p",[s._v("其中，要发送的消息可以为"),a("code",[s._v("string")]),s._v("/"),a("code",[s._v("MessageBase")]),s._v("/"),a("code",[s._v("IEnumberable<MessageBase>")]),s._v("类型，但是这里我们只用到了"),a("code",[s._v("string")]),s._v("。")]),s._v(" "),a("h3",{attrs:{id:"被动发送消息"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#被动发送消息"}},[s._v("#")]),s._v(" 被动发送消息")]),s._v(" "),a("p",[s._v("相对于主动发送消息，被动发送消息就方便多了，通常你只需要使用某个"),a("code",[s._v("MessageReceiver")]),s._v("调用它对应的拓展方法即可。")]),s._v(" "),a("p",[s._v("比如发送群消息：")]),s._v(" "),a("div",{staticClass:"language-cs extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cs"}},[a("code",[s._v("bot"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("MessageReceived\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token generic-method"}},[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("OfType")]),a("span",{pre:!0,attrs:{class:"token generic class-name"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),s._v("GroupMessageReceiver"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("Subscribe")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("async")]),s._v(" receiver "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" \n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("await")]),s._v(" receiver"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("SendGroupMessageAsync")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"HelloWorld!"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),a("p",[s._v("以此类推可知发送好友消息：")]),s._v(" "),a("div",{staticClass:"language-cs extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cs"}},[a("code",[s._v("bot"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("MessageReceived\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token generic-method"}},[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("OfType")]),a("span",{pre:!0,attrs:{class:"token generic class-name"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),s._v("FriendMessageReceiver"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("Subscribe")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("async")]),s._v(" receiver "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" \n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("await")]),s._v(" receiver"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("SendFriendMessageAsync")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"HelloWorld!"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),a("p",[s._v("别的消息容器也是一样的，只是相对应的方法名不同而已。")])])}),[],!1,null,null,null);t.default=e.exports}}]);